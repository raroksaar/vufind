<?php
  /**
   * Confirm button component: display a button that drops down yes/no options to confirm an action.
   *
   * @param ?string $align             Menu alignment (default = left)
   * @param ?string $buttonClass       CSS class to apply to button element (if omitted, default is based on
   *                                   $buttonLink)
   * @param ?string $buttonId          ID to use for the button element (defaults to confirm_ concatenated with the
   *                                   invocation counter)
   * @param ?string $buttonIcon        Icon name to display with button text (optional; also requires $buttonLabel
   *                                   to be set)
   * @param ?string $buttonLabel       Text to display on button
   * @param ?string $buttonLabelHtml   HTML to display on button (ignored when $buttonIcon and $buttonLabel are
   *                                   both set; overrides $buttonLabel otherwise)
   * @param ?string $buttonLink        If set, the component will render as a link pointing to this URL; if unset, the
   *                                   component will render as a submit button
   * @param ?string $buttonName        Name attribute value for button (optional)
   * @param ?string $cancelClass       CSS class(es) to use for cancel (no) option (optional)
   * @param ?string $cancelId          ID to use for cancel (no) option (optional)
   * @param ?string $cancelLabelHtml   HTML for cancel (no) option contents (default = translation of
   *                                   confirm_dialog_no)
   * @param ?string $cancelTitle       Title attribute to use for cancel (no) option (optional) -- will be translated
   * @param ?bool   $clearAccountCache Should we set the data-clear-account-cache attribute on the confirm (yes)
   *                                   option? (default = false)
   * @param ?string $confirmClass      CSS class(es) to use for confirm (yes) option (optional)
   * @param ?string $confirmId         ID to use for confirm (yes) option (optional)
   * @param ?string $confirmLabelHtml  HTML for confirm (yes) option contents (default = translation of
   *                                   confirm_dialog_yes)
   * @param ?string $confirmLink       Href attribute to use for confirm (yes) option (optional)
   * @param ?string $confirmTitle      Title attribute to use for confirm (yes) option (optional) -- will be translated
   * @param ?string $header            Text to display at the header of the drop-down menu (optional; will be
   *                                   translated when provided)
   * @param ?bool   $ignoreLightbox    Should we set data-lightbox-ignore attribute on all interactive elements?
   *                                   (default = false)
   */
  $buttonId = $this->buttonId ?? 'confirm_' . $this->_invocation;
  if (null === ($buttonClass = $this->buttonClass)) {
    if ($this->buttonLink) {
      $buttonClass = 'btn btn-link';
    } else {
      $buttonClass = 'btn btn-default';
    }
  }
  if ($this->buttonIcon && $this->buttonLabel) {
    $buttonClass .= ' icon-link';
  }

  $buttonAttrs = [
    'id' => $buttonId,
    'class' => "$buttonClass dropdown-toggle",
    'data-bs-toggle' => 'dropdown',
    'aria-expanded' => 'false',
    'aria-haspopup' => 'true',
  ];
  if ($link = $this->buttonLink) {
    $buttonAttrs['href'] = $link;
  } else {
    $buttonAttrs['type'] = 'submit';
  }
  if ($name = $this->buttonName) {
    $buttonAttrs['name'] = $name;
  }
  // Allow label with or without icon, or a raw html one:
  if ($this->buttonIcon && $this->buttonLabel) {
    $buttonLabelHtml = $this->icon($this->buttonIcon, 'icon-link__icon') . ' '
      . '<span class="icon-link__label">' . $this->transEsc($this->buttonLabel) . '</span>';
  } else {
    $buttonLabelHtml = $this->buttonLabelHtml ?? $this->transEsc($this->buttonLabel);
  }

  $ulAttrs = [
    'class' => 'right' === ($this->align ?? 'default') ? 'dropdown-menu dropdown-menu-end' : 'dropdown-menu',
    'role' => 'menu',
    'aria-labelledby' => $buttonId,
  ];

  $confirmAttrs = [
    'class' => 'dropdown-item',
    'href' => '#',
  ];
  if ($id = $this->confirmId) {
    $confirmAttrs['id'] = $id;
  }
  if ($title = $this->confirmTitle) {
    $confirmAttrs['title'] = $this->translate($title);
  }
  if ($class = $this->confirmClass) {
    $confirmAttrs['class'] .= " $class";
  }
  if ($href = $this->confirmLink) {
    $confirmAttrs['href'] = $href;
  }
  if ($this->clearAccountCache) {
    $confirmAttrs['data-clear-account-cache'] = '';
  }

  $cancelAttrs = [
    'class' => 'dropdown-item',
    'href' => '#',
  ];
  if ($id = $this->cancelId) {
    $cancelAttrs['id'] = $id;
  }
  if ($title = $this->cancelTitle) {
    $cancelAttrs['title'] = $this->translate($title);
  }
  if ($class = $this->cancelClass) {
    $cancelAttrs['class'] .= " $class";
  }

  if ($this->ignoreLightbox) {
    $buttonAttrs['data-lightbox-ignore'] = '';
    $confirmAttrs['data-lightbox-ignore'] = '';
    $cancelAttrs['data-lightbox-ignore'] = '';
  }

  $wrapperAttrs = [
    'class' => 'btn-group ' . $this->_componentClass,
  ];
?>
<div<?=$this->htmlAttributes($wrapperAttrs)?>>
  <?php if ($this->buttonLink): ?>
    <a<?=$this->htmlAttributes($buttonAttrs)?>><?=$buttonLabelHtml?></a>
  <?php else: ?>
    <button<?=$this->htmlAttributes($buttonAttrs)?>><?=$buttonLabelHtml?></button>
  <?php endif; ?>
  <ul<?=$this->htmlAttributes($ulAttrs)?>>
    <?php if ($this->header): ?>
      <li><span class="dropdown-header"><?=$this->transEsc($this->header)?></span></li>
    <?php endif; ?>
    <li>
      <a<?=$this->htmlAttributes($confirmAttrs)?>><?=$this->confirmLabelHtml ?? $this->transEsc('confirm_dialog_yes')?></a>
    </li>
    <li>
      <a<?=$this->htmlAttributes($cancelAttrs)?>><?=$this->cancelLabelHtml ?? $this->transEsc('confirm_dialog_no')?></a>
    </li>
  </ul>
</div>

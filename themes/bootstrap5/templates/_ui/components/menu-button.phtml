<?php
  /**
   * Component to display a button that drops down a menu of options.
   *
   * @param ?string $href         URL to link the menu button to, as a non-Javascript fallback (optional)
   * @param array   $menuItems    Array of arrays representing menu items; each element can/should contain these keys:
   *                              - external (bool): if true, apply a target of _blank to the link (default = false)
   *                              - label (string): text of menu option link (required, will be translated)
   *                              - lightbox (bool): if true, open the link in a lightbox (default = false)
   *                              - selected (bool): is this the active menu item? (default = false)
   *                              - url (string): target link for menu option (required)
   * @param ?array  $toggleAttrs  Additional attributes to apply to the toggle button
   * @param string  $toggleLabel  The label for the toggle button (will be translated)
   * @param ?string $wrapperTag   Tag to use as a wrapper around the control (default = div)
   * @param ?string $wrapperClass Extra CSS class(es) to apply to the wrapper tag
   */
  $wrapperTag = $this->wrapperTag ?? 'div';
  $wrapperClass = 'dropdown'; // Bootstrap class

  if ($this->wrapperClass ?? false) {
    $wrapperClass = $this->wrapperClass . ' dropdown'; // Bootstrap class
  }
  $wrapperClass .= ' ' . $this->_componentClass;

  $toggleTag = 'button';
  $defaultAttrs = [
    'type' => 'button', // Accessible default
    'class' => 'dropdown-toggle', // Bootstrap class
    'data-bs-toggle' => 'dropdown', // Bootstrap data-attr
    'aria-expanded' => 'false',
    'aria-haspopup' => 'true',
  ];

  // An anchor tag with an href should only be used as
  // a non-js fallback to open the menu on another page
  if ($this->href ?? false) {
    $toggleTag = 'a';
    $defaultAttrs['href'] = $this->href;
    $defaultAttrs['type'] = null;
  }

  $toggleAttrs = array_merge($defaultAttrs, $this->toggleAttrs ?? []);
?>

<?php ob_start(); ?>
  <?=$this
      ->makeTag(
          $toggleTag,
          $this->transEsc($this->toggleLabel) . $this->icon('dropdown-caret'),
          $toggleAttrs,
          ['escapeContent' => false]
      )
  ?>

  <ul class="dropdown-menu">
    <?php foreach ($this->menuItems as $current): ?>
      <li class="dropdown__item">
        <a class="dropdown-item dropdown__link<?=($current['selected'] ?? false) ? ' active' : ''?>"
          href="<?=$this->escapeHtmlAttr($current['url']) ?>"
          <?php if ($current['external'] ?? false): ?> target="_blank"<?php endif; ?>
          <?php if ($current['lightbox'] ?? false): ?> data-lightbox="true"<?php endif; ?>
          rel="nofollow"
        >
          <?=$this->transEsc($current['label']) ?>
        </a>
      </li>
    <?php endforeach; ?>
  </ul>
<?php $menuContents = ob_get_contents(); ?>
<?php ob_end_clean(); ?>

<?=$this->makeTag($wrapperTag, $menuContents, $wrapperClass, ['escapeContent' => false]) ?>
